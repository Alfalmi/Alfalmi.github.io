{"version":3,"file":"component---src-pages-index-js-63e27a67b0079b05bd81.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/seo/seo.js","webpack://gatsby-starter-default/./src/components/home/landing/landing.js","webpack://gatsby-starter-default/./src/components/home/landing/landing-container.js","webpack://gatsby-starter-default/./src/components/home/research/research.js","webpack://gatsby-starter-default/./src/utils/sort-markdown.js","webpack://gatsby-starter-default/./src/components/home/research/research-container.js","webpack://gatsby-starter-default/./src/components/home/gutter/gutter.js","webpack://gatsby-starter-default/./src/components/home/home.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            defaultDescription: description\n            defaultTitle: title\n            siteUrl\n          }\n        }\n      }\n    `,\n  );\n\n  const {\n    defaultDescription,\n    defaultTitle,\n    siteUrl,\n  } = site.siteMetadata;\n\n  const seo = {\n    description: description || defaultDescription,\n    title: title || defaultTitle,\n    url: siteUrl,\n  };\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={seo.title}\n      titleTemplate={`%s | ${defaultTitle}`}\n      meta={[\n        {\n          name: 'description',\n          content: seo.description,\n        },\n        {\n          property: 'og:title',\n          content: seo.title,\n        },\n        {\n          property: 'og:description',\n          content: seo.description,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          property: 'og:url',\n          content: seo.url,\n        },\n        {\n          property: 'twitter:title',\n          content: seo.title,\n        },\n        {\n          property: 'twitter:description',\n          content: seo.description,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n\n\nimport './landing.css';\n\nconst Landing = ({\n  author,\n  description,\n  links,\n}) => (\n  <div className=\"bg-image\"/>\n  \n\n  \n);\n\nLanding.propTypes = {\n  author: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  links: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Landing;","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Landing from './landing';\n\nconst LandingContainer = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            author\n            description\n            primaryLinks\n          }\n        }\n      }\n    `,\n  );\n\n  const { author, description, primaryLinks } = site.siteMetadata;\n\n  return (\n    <Landing\n      author={author}\n      description={description}\n      links={primaryLinks}\n    />\n  );\n};\n\nexport default LandingContainer;\n","/* eslint-disable react/no-danger */\n\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons';\n\nimport './research.css';\n\nconst Research = ({\n  markdown,\n}) => (\n  <section\n    className=\"research\"\n    id=\"research\"\n  >\n    <h2>\n      <FontAwesomeIcon icon={faBoxOpen} />\n      Tecnologías de Impresión 3D\n    </h2>\n    <ul className=\"research__list\">\n      {\n        markdown.map((research) => (\n          <li key={research.node.frontmatter.title}>\n            {\n              research.node.frontmatter.title\n              && <h3>{research.node.frontmatter.title}</h3>\n            }\n            <div>\n              {\n                research.node.frontmatter.image\n                && (\n                  <GatsbyImage\n                    alt={research.node.frontmatter.title}\n                    className=\"research__list-image\"\n                    image={research.node.frontmatter.image.childImageSharp.gatsbyImageData}\n                  />\n                )\n              }\n              <div dangerouslySetInnerHTML={{ __html: research.node.html }} />\n            </div>\n          </li>\n        ))\n      }\n    </ul>\n  </section>\n);\n\nResearch.propTypes = {\n  markdown: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          image: PropTypes.shape({}),\n          title: PropTypes.string,\n        }),\n        html: PropTypes.node,\n      }),\n    }),\n  ).isRequired,\n};\n\nexport default Research;\n","const sortMarkdown = (entries, sortFields = []) => {\n  if (sortFields.length === 0) {\n    return entries;\n  }\n\n  const compare = (a, b) => {\n    if (a.node.frontmatter[sortFields[0]] < b.node.frontmatter[sortFields[0]]) {\n      return -1;\n    } if (a.node.frontmatter[sortFields[0]] > b.node.frontmatter[sortFields[0]]) {\n      return 1;\n    } if (\n      sortFields.length >= 2\n      && a.node.frontmatter[sortFields[1]] < b.node.frontmatter[sortFields[1]]\n    ) {\n      return -1;\n    } if (\n      sortFields.length >= 2\n      && a.node.frontmatter[sortFields[1]] > b.node.frontmatter[sortFields[1]]\n    ) {\n      return 1;\n    }\n    return 0;\n  };\n\n  entries.sort(compare);\n  return entries;\n};\n\nexport default sortMarkdown;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Research from './research';\n\nimport sortMarkdown from '../../../utils/sort-markdown';\n\nconst ResearchContainer = () => {\n  const query = useStaticQuery(\n    graphql`\n      query {\n        markdown: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/research/\" } }) {\n          edges {\n            node {\n              html\n              frontmatter {\n                image {\n                  childImageSharp {\n                    gatsbyImageData(quality: 90, height: 300, width: 300)\n                  }\n                }\n                title\n                order\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const markdown = sortMarkdown(query.markdown.edges, ['order', 'title']);\n\n  return (\n    markdown.length > 0\n      ? <Research markdown={markdown} />\n      : null\n  );\n};\n\nexport default ResearchContainer;\n","import React from 'react';\n\nimport './gutter.css';\n\nexport const GutterLeft = () => (\n  <div className=\"gutter gutter_left\" />\n);\n\nexport const GutterRight = () => (\n  <div className=\"gutter gutter_right\" />\n);\n","import React from 'react';\n\n\nimport Landing from './landing/landing-container';\n\nimport Research from './research/research-container';\nimport { GutterLeft, GutterRight } from './gutter/gutter';\n\nimport './home.css';\n\nconst Home = () => (\n  <>\n    <Landing />\n    <div className=\"home__layout\">\n      <GutterLeft />\n      <div className=\"home__inner\">\n        \n        <Research />\n   \n        \n      </div>\n      <GutterRight />\n    </div>\n  </>\n);\n\nexport default Home;","import React from 'react';\r\n\r\nimport Home from '../components/home/home';\r\nimport Layout from '../components/layout/layout';\r\nimport SEO from '../components/seo/seo';\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <Home />\r\n  </Layout>\r\n);\r\n\r\nexport default IndexPage;"],"names":["SEO","description","lang","meta","title","useStaticQuery","site","siteMetadata","defaultDescription","defaultTitle","seo","url","siteUrl","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","author","links","className","primaryLinks","markdown","id","icon","faBoxOpen","map","research","key","node","frontmatter","image","G","alt","childImageSharp","gatsbyImageData","dangerouslySetInnerHTML","__html","html","entries","sortFields","length","sort","a","b","query","sortMarkdown","edges","GutterLeft","GutterRight"],"sourceRoot":""}